/*
1.Зробіть функцію, яка приймає параметром число від 1 до 7, а повертає день тижня українською мовою

2.Створіть функцію, яка заповнюватиме масив 10-ма іксами за допомогою циклу.

3.Створіть функцію яка буде приймати від користувача ім'я, прізвище, дату народження. Та повертатиме дів на сторінку з цими даними у вигляді карточки.

4.Якщо змінна a більше нуля - то в ggg запишемо функцію, яка виводить один!, інакше запишемо функцію, яка виводить два!

5.Написати функцію, яка отримує на вхід два числа. Якщо обидва числа парні - функція повертає їхнє твір. 
Якщо обидва числа непарні – функція повертає їхню суму. Якщо одне із чисел парне, а друге непарне - функція повертає це непарне число.

6.Напишіть функцію range(), яка приймає два аргументи: початок і кінець діапазону, і повертає масив, який містить усі числа з діапазону, включаючи початкове та кінцеве. 
Третій необов'язковий аргумент функції range() – крок для побудови масиву. 
Переконайтеся, що функція range() працює з негативним кроком: наприклад, range(5, 2, -1) повертає [5, 4, 3, 2]. 
*/



// 1.Зробіть функцію, яка приймає параметром число від 1 до 7, а повертає день тижня українською мовою
// const days = ["", "Понеділок", "Вівторок", "Середа", "Четверг", "П'ятниця", "Субота", "Неділя"];
// function ask(a) {
//    a = parseFloat(prompt('Введіть число від 1-7'));
//    if(a == 1){
//       alert(days[1])
//    } else if( a == 2) {
//       alert(days[2])
//    } else if ( a == 3){
//       alert(days[3])
//    } else if(a == 4){
//       alert(days[4])
//    } else if(a == 5){
//       alert(days[5])
//    }else if( a == 6){
//       alert(days[6])
//    } else{
//       alert(days[7])
//    }
// }
// ask();


// 2.Створіть функцію, яка заповнюватиме масив 10-ма іксами за допомогою циклу.
//  let a = [];

// function add () {
//    for(i = 0; i < 10; i++){
//       a.push("x")
//    }
// }
// add();


// 3.Створіть функцію яка буде приймати від користувача ім'я, прізвище, дату народження. Та повертатиме дів на сторінку з цими даними у вигляді карточки.

// let age
// let user
// let surname
// function card(user, surname, age) {
//    user = prompt("Write your name:")
//    surname = prompt("Write your surname:")
//    age = prompt("Write your age:")
//     return document.getElementById("wrap").innerHTML = `<p> Name: ${user} </p>  <p> Surname : ${surname} </p>  <p> Age : ${age} </p>`

// }
// card();


// 4.Якщо змінна a більше нуля - то в ggg запишемо функцію, яка виводить один!, інакше запишемо функцію, яка виводить два!

/* 

Не зрозумів умову тому зробив у двох варіантах!

 */

// const a = prompt('Write number : ');
// if (a > 0) {
//    function ggg() {
//       alert('One')
//    }
//    ggg()
// } else {
//    function eee() {
//       alert('Two')
//    }
//    eee()
// }


// function ggg() {
//    const a = prompt('Write number : ');
//    if (a > 0) {
//       console.log('one');
//    } else {
//       console.log('two');
//    }
// }
// ggg();



// 5.Написати функцію, яка отримує на вхід два числа. Якщо обидва числа парні - функція повертає їхнє твір.
// Якщо обидва числа непарні – функція повертає їхню суму. Якщо одне із чисел парне, а друге непарне - функція повертає це непарне число.

// function foo (a, b)  {
//    if(a % 2 === 0 && b % 2 === 0){
//       console.log(a * b)
//    } else if(a % 2 !== 0 && b % 2 !== 0){
//       console.log(a + b)
//    }else{
//       console.log( a % 2 === 0 ? b : a )
//    }
   
// }
// foo();



// 6.Напишіть функцію range(), яка приймає два аргументи: початок і кінець діапазону, і повертає масив, який містить усі числа з діапазону, включаючи початкове та кінцеве.
// Третій необов'язковий аргумент функції range() – крок для побудови масиву.
// Переконайтеся, що функція range() працює з негативним кроком: наприклад, range(5, 2, -1) повертає [5, 4, 3, 2].

const range = (max, min, step) => {
   max = parseInt(prompt('Початкове число')),
   min = parseInt(prompt('Кінцеве число')),
   step = parseInt(prompt('шаг'));
   let arr = [];
   for (let i = max; i > min; i--){
      arr.push(i)
   }
   arr.push(min)
   return console.log(arr)
}
range();